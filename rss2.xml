<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>好久没读诗了啊</title>
    <link>https://serendipitious.top/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>昼眠听风，夜坐听雨</description>
    <pubDate>Sun, 05 Jul 2020 05:17:56 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>基于 Github/Gitee Pages 服务 + Hexo 框架搭建静态博客</title>
      <link>https://serendipitious.top/2020/07/05/Blog_start/</link>
      <guid>https://serendipitious.top/2020/07/05/Blog_start/</guid>
      <pubDate>Sun, 05 Jul 2020 05:04:29 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言：要知道些什么呢？&quot;&gt;&lt;a href=&quot;#前言：要知道些什么呢？&quot; class=&quot;headerlink&quot; title=&quot;前言：要知道些什么呢？&quot;&gt;&lt;/a&gt;前言：要知道些什么呢？&lt;/h2&gt;&lt;h3 id=&quot;一：Pages-服务是啥&quot;&gt;&lt;a href=&quot;#一：Pages-服务是啥&quot; class=&quot;headerlink&quot; title=&quot;一：Pages 服务是啥:&quot;&gt;&lt;/a&gt;&lt;code&gt;一：Pages 服务是啥:&lt;/code&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;代码托管网站将用户的仓库文件以网页形式发布，这就是「Pages」。在 Pages 服务中，代码仓库中的是网站的源文件，托管平台的服务器扮演了远程主机的角色，为了让网页能够正常访问，托管平台提供域名、证书等「配件」。利用这一服务，开发者可以高效地建立项目主页，或者个人博客。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="前言：要知道些什么呢？"><a href="#前言：要知道些什么呢？" class="headerlink" title="前言：要知道些什么呢？"></a>前言：要知道些什么呢？</h2><h3 id="一：Pages-服务是啥"><a href="#一：Pages-服务是啥" class="headerlink" title="一：Pages 服务是啥:"></a><code>一：Pages 服务是啥:</code></h3><blockquote><p>代码托管网站将用户的仓库文件以网页形式发布，这就是「Pages」。在 Pages 服务中，代码仓库中的是网站的源文件，托管平台的服务器扮演了远程主机的角色，为了让网页能够正常访问，托管平台提供域名、证书等「配件」。利用这一服务，开发者可以高效地建立项目主页，或者个人博客。</p></blockquote><a id="more"></a><p>在国内提供 Pages 服务的代码托管平台主要有微软旗下的 <code>GitHub</code>，开源中国旗下的 <code>Gitee</code> (码云)和与腾讯合作的 <code>Coding</code>。三个平台的基础功能包括 Pages 的使用都是<strong>免费</strong>的🙄。</p><p>开通条件如下：</p><p><img src="https://img-blog.csdnimg.cn/20200705123331612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>配套服务对比表格如下：<img src="https://img-blog.csdnimg.cn/20200705123422522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt="">)访问体验：<img src="https://img-blog.csdnimg.cn/20200705123513487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br>配套服务对比表格如下：<br><img src="https://img-blog.csdnimg.cn/20200705123633275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br>综上，<code>GitHub</code>除了访问速度比较慢（地区差异，博主使用<code>GitHub</code>部署的访问速度还可以：静态网站不同于动态。）优势比较明显：自定义域名不收费，自己购买的域名不同于<code>gitee</code>通过收费获得自定义域名功能之后还需要进行’’复杂漫长’’的备案环节；自动化部署，通过git上传到库就不用自己手动更新了，不像隔壁的gitee花钱。😅Coding因为它<strong>容易崩</strong>，更重要的是我没实际操作过。</p><h3 id="二：Hexo-框架又是个啥："><a href="#二：Hexo-框架又是个啥：" class="headerlink" title="二：Hexo 框架又是个啥："></a><code>二：Hexo 框架又是个啥</code>：</h3><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><p>Hexo 官方提供了各式各样的主题，而且使用人数很多，以后遇到问题或者是有关博客的美化环节可以借鉴他人的相关操作。且有很多插件可以使用，持支一键部署；可以去<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a>了解呀。</p><h2 id="正式开始建站啦："><a href="#正式开始建站啦：" class="headerlink" title="正式开始建站啦："></a>正式开始建站啦：</h2><h3 id="一：环境的配置："><a href="#一：环境的配置：" class="headerlink" title="一：环境的配置："></a><code>一：环境的配置：</code></h3><p>必要的环境的配置：Git方便我们把本地文件部署到GitHub；Hexo是一个<strong>基于Node.js</strong>的静态博客框架，因此需要先安装<strong>Node.js环境</strong></p><h4 id="1、安装Node-js"><a href="#1、安装Node-js" class="headerlink" title="1、安装Node.js"></a>1、安装Node.js</h4><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js官网</a>：按照默认步骤进行安装<br><img src="https://img-blog.csdnimg.cn/20200705123657111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></p><h4 id="2、安装Git"><a href="#2、安装Git" class="headerlink" title="2、安装Git:"></a>2、安装Git:</h4><p>进入Git官网<a href="https://git-scm.com/" target="_blank" rel="noopener">Git官网</a>，点击 <strong><em>Downloads</em></strong> 下载：<br><img src="https://img-blog.csdnimg.cn/20200705123723680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br>参考资料😏：<a href="https://www.cnblogs.com/jytx/p/5602927.html" target="_blank" rel="noopener">《如何在windows下安装GIT》</a><br>　　　      　　<a href="http://git.oschina.net/progit/" target="_blank" rel="noopener">《Pro Git（中文版）》</a></p><p><strong>检验Git是否安装成功：</strong></p><p>同时按下 Win 键和 R 键打开运行窗口,输入 cmd ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装，此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 <code>Git GUI Here</code> 和 <code>Git Bash Here</code>两个选项，第一个是图形界面的Git操作，另一个是命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git --version  </span><br><span class="line">$ node -v  </span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200705123744226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></p><h4 id="3、安装Hexo并初始化："><a href="#3、安装Hexo并初始化：" class="headerlink" title="3、安装Hexo并初始化："></a>3、安装Hexo并初始化：</h4><p>选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 <code>Git Bash Here</code>，输入以下 npm 命令即可安装，第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer（插件），如图所示即为安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g  </span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200705123825686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br><strong>Hexo 初始化配置：</strong></p><p>进入我们刚创建的Blog文件夹下鼠标右击，点击Git Bash Here，输入 <code>hexo init</code>命令：<br><img src="https://img-blog.csdnimg.cn/20200705123911635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：<img src="https://img-blog.csdnimg.cn/20200705123928739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></p><p><strong>查看本地效果：</strong></p><p>执行以下命令，执行完即可登录 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate  </span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>显示以下信息说明操作成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>登录 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看效果：<img src="https://img-blog.csdnimg.cn/20200705123953269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="二：将博客部署到-Github-gitee-Pages-上"><a href="#二：将博客部署到-Github-gitee-Pages-上" class="headerlink" title="二：将博客部署到 Github/gitee Pages 上"></a><code>二：将博客部署到 Github/gitee Pages 上</code></h3><p>到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到Github Pages上。</p><h4 id="1、注册GitHub-gitee-账户："><a href="#1、注册GitHub-gitee-账户：" class="headerlink" title="1、注册GitHub /gitee 账户："></a>1、注册GitHub /gitee 账户：</h4><blockquote><p>你肯定会😁  <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>  <a href="https://gitee.com/" target="_blank" rel="noopener">Gitee</a></p></blockquote><h4 id="2、创建项目代码库"><a href="#2、创建项目代码库" class="headerlink" title="2、创建项目代码库"></a>2、创建项目代码库</h4><p>点击 <strong>New repository</strong> 开始创建，步骤及注意事项见下图：（gitee 差不多）<img src="https://img-blog.csdnimg.cn/20200705124025875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></p><h4 id="3、配置-SSH-密钥"><a href="#3、配置-SSH-密钥" class="headerlink" title="3、配置 SSH 密钥"></a>3、配置 SSH 密钥</h4><blockquote><p>通过配置 SSH 密钥我们能够更方便的实现本地代码库与 Github 代码库同步；当然，您也可以选择不配置SSH密钥而使用HTTPS连接来部署Blog，副作用是<strong>每次</strong>提交都需要输入托管网站的账号密码。</p></blockquote><p>我们在新建的文件夹（Blog)中右键打开 Git Bash：输入 <code>ssh-keygen -t rsa</code> 命令<strong>（注意空格）</strong>，表示我们指定 RSA 算法生成密钥，<strong>然后敲四次回车键</strong>，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub. 文件的位置在 Git Bash 上面都有显示，默认生成在以下目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Linux 系统：~&#x2F;.ssh</span><br><span class="line">Mac 系统：~&#x2F;.ssh</span><br><span class="line">Windows 10 ：C:&#x2F;Users&#x2F;用户名&#x2F;.ssh</span><br></pre></td></tr></table></figure><blockquote><p>在 GitHub 账户中添加你的公钥： </p></blockquote><p><strong>① 登陆 GitHub，进入 Settings：</strong><br><img src="https://img-blog.csdnimg.cn/20200705124112852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br><strong>②选择选择 New SSH key：</strong><br><img src="https://img-blog.csdnimg.cn/20200705124153274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br><strong>③将复制的公钥 id_rsa.pub 的内容粘贴到 key 内，再点击 Add SSH key如下图：</strong><br><img src="https://img-blog.csdnimg.cn/20200705124212836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br><strong>④测试：我们可以通过在 Git Bash 中输入 <code>ssh -T git@github.com</code> 进行检验：</strong><br><img src="https://img-blog.csdnimg.cn/20200705124231230.png" alt="">输入 yes 后会显示：<img src="https://img-blog.csdnimg.cn/20200705124411678.png" alt=""></p><p><strong>⑤配置个人git 信息</strong></p><p>Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;此处填你的用户名&quot;  </span><br><span class="line">$ git config --global user.email  &quot;此处填你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>到此为止 SSH Key 配置成功，本机已成功连接到 Github。</p><h4 id="4、将本地的-Hexo-文件更新到-GitHub-的库中"><a href="#4、将本地的-Hexo-文件更新到-GitHub-的库中" class="headerlink" title="4、将本地的 Hexo 文件更新到 GitHub 的库中"></a>4、将本地的 Hexo 文件更新到 GitHub 的库中</h4><p><strong>① 登录 Github 打开自己的项目 your name.github.io</strong></p><p><strong>② 鼠标移到 Clone or download 按钮，选择 Use SSH（假装您配置了SSh:真的方便)</strong><br><img src="https://img-blog.csdnimg.cn/20200705124522852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br><strong>③打开你创建的 Blog文件夹，右键用记事本（Notepad++或者VS code等都可以）打开该文件夹下的 _config.yml 文件</strong><br><img src="https://img-blog.csdnimg.cn/20200705124543895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br><strong>④配置Hexo:下滑到_config.yml文件底部，填上如下内容：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">🙄假装您配置了SSH密钥：</span><br><span class="line">😑如果仅仅只是用GitHub pages 服务我们可以填写：</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:&#123;yourname&#125;&#x2F;&#123;yourname&#125;.github.io.git  #你的仓库地址SSH </span><br><span class="line">  branch: master</span><br><span class="line">😐GitHub和Gitee都配置（建议，前提你都有仓库了啊）</span><br><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repo: </span><br><span class="line">    github: git@github.com:&#123;yourname&#125;&#x2F;&#123;yourname&#125;.github.io.git</span><br><span class="line">    gitee: git@gitee.com:&#123;yourname&#125;&#x2F;&#123;yourname&#125;.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><strong>⑤至此，您已经完成了将Hexo的静态网站同步部署至Github与码云(Gitee)的全部步骤。</strong><br>一如既往，让我们通过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure><p><strong>⑥访问博客</strong></p><p>你的博客地址：https://你的用户名.github.io，现在每个人都可以通过此链接访问你的博客了。</p><p><strong>⑦写博客</strong></p><p>新建一个空文章，在Blog下 git bash 输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n &quot;文章标题&quot;</span><br></pre></td></tr></table></figure><p>程序会在我们的 \Blog\source \ _posts中生成 文章标题.md 文件，用<code>Markdown</code>编辑器修改文章内容即可。</p><p>当我们用编辑器写好文章后，可以使用以下命令将其推送到服务器上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   </span><br><span class="line">hexo g      </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><strong>现在访问你的博客就可以看见写好的文章啦！</strong></p><h3 id="三：博客主题相关："><a href="#三：博客主题相关：" class="headerlink" title="三：博客主题相关："></a><code>三：博客主题相关：</code></h3><blockquote><p>现在博客也搭建好了，但是这样光秃秃的什么也没有不好看，是时候美化一波了！</p></blockquote><h4 id="1、主题选择与更换"><a href="#1、主题选择与更换" class="headerlink" title="1、主题选择与更换"></a>1、主题选择与更换</h4><p>①我们进入Hexo 官网的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题专栏</a>：<br><img src="https://img-blog.csdnimg.cn/20200705124631211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br>②选择一个主题进入其GitHub的仓库 以<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT</a>为例</p><p>打开博客根目录Blog文件夹，右键Git Bash，输入如下代码将next主题下载到目录Blog/themes：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next 克隆这个原始主题库</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020070512470133.png" alt=""><br>③主题和站点的相关配置美化：</p><blockquote><p>先敲响警钟：根目录Blog和主题文件next下都有一个<code>_config.yml</code>的配置文件，区分开来：站点配置文件和主题配置文件。😭不要踩坑 啊</p></blockquote><p>打开根目录下的<code>_config.yml</code>(称为<strong>站点配置文件</strong>)，修改主题（<strong>注意冒号后都要有空格</strong>）：（推荐<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">vscode</a>编辑器）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">🙄看英文单词 ：这是网站标题这一块：</span><br><span class="line"># Site   </span><br><span class="line">title: 好久没读诗了啊</span><br><span class="line">subtitle: 写点什么</span><br><span class="line">description: 昼眠听风，夜坐听雨</span><br><span class="line">keywords:</span><br><span class="line">author: Serendipity</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia&#x2F;Shanghai</span><br><span class="line">🙄网站主题这一块：</span><br><span class="line"># Extensions  </span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: next   #主题改为next</span><br><span class="line"> 以后修改站点的配置就可以在这个问价里面修改了</span><br></pre></td></tr></table></figure><p>主题语言主要是看你的themes/next/language中的简体中文是 zh-CN 还是 zh-Hans：<br><img src="https://img-blog.csdnimg.cn/20200705124736979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br>next主题有四种，如下图依次为Muse、Mist、Pisces、Gemini。<br>我选的是Gemini，打开目录Blog/themes/next/下的<code>_config.yml</code>（称为<strong>主题配置文件</strong>），只要将你选的主题前的#删除就行了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini    #这是我选的主题</span><br></pre></td></tr></table></figure><p>回到根目录打开Git Bash，输入如下三条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>完成后打开你的博客：<img src="https://img-blog.csdnimg.cn/20200705124804910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></p><h4 id="2、我踩过的坑："><a href="#2、我踩过的坑：" class="headerlink" title="2、我踩过的坑："></a>2、我踩过的坑：</h4><blockquote><p>其他的美化就可以网上照着弄了就可以了。</p><p>之要每一次更改内容都要以<code>hexo clean</code> <code>hexo g</code> ，然后 <code>hexo s</code>本地预览一下效果是否完成了，一步一步的来，避免慌慌张张思路不清晰的弄坏了配置无法打开了 还得重新开始。😭</p><p>自由发挥吧。。🙄</p></blockquote><h4 id="3、附录："><a href="#3、附录：" class="headerlink" title="3、附录："></a>3、附录：</h4><p><code>持续更新</code></p><p><strong>①购买域名：<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">阿里云</a>摸索着买。</strong></p><p><strong>②域名的解析：</strong></p><ul><li>登录阿里云，点击控制台，在你已购买的域名后点击解析添加两条解析记录：<br><img src="https://img-blog.csdnimg.cn/20200705124832111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200705124901119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>那个IPV4地址可以通过<code>ping</code>得到，具体方法是：打开cmd输入下面命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 你的账户名.github.io    #ping + 你的GitHub的网址</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200705124919122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></p><ul><li>打开 Blog 文件夹里的 source 文件夹，添加<code>CNAME</code>文件，可以先创建一个<code>CNAME.tx</code>t文件，打开后写上你的域名，不要加www否则每次访问都必须加www，但如果不带有www，以后访问的时候带不带www都可以访问，保存后记得要重命名，将.txt删除，如下图：<img src="https://img-blog.csdnimg.cn/20200705125000136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></li><li>第三步回到 Blog 文件夹，右键打开 Git Bash，依次输入下面三条命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><ul><li>打开GitHub，看看<code>CNAME</code>文件是否已经在你的项目中，点击 <strong>settings ：</strong><br><img src="https://img-blog.csdnimg.cn/20200705125020483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NlcmVuZGlwaXR5X0g=,size_16,color_FFFFFF,t_70" alt=""></li><li>如果你没有<code>CNAME</code>文件，可以自己在GitHub仓库里面添加这个文件。</li></ul><blockquote><p>🤣哈哈哈哈哈 我觉得图床什么的可以直接把文章先放在CSDN 。</p></blockquote>]]></content:encoded>
      
      
    </item>
    
    <item>
      <title>你好哇</title>
      <link>https://serendipitious.top/2020/07/02/%E4%BD%A0%E5%A5%BD%E5%93%87/</link>
      <guid>https://serendipitious.top/2020/07/02/%E4%BD%A0%E5%A5%BD%E5%93%87/</guid>
      <pubDate>Thu, 02 Jul 2020 05:17:26 GMT</pubDate>
      <description>
      
        &lt;blockquote class=&quot;blockquote-center&quot;&gt;
            &lt;i class=&quot;fa fa-quote-left&quot;&gt;&lt;/i&gt;
            &lt;p&gt;😋 “感受来自世界每一寸维度的的人们各自忙碌充满张力的人间烟火。”&lt;/p&gt;

            &lt;i class=&quot;fa fa-quote-right&quot;&gt;&lt;/i&gt;
          &lt;/blockquote&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <p>😋 “感受来自世界每一寸维度的的人们各自忙碌充满张力的人间烟火。”</p>            <i class="fa fa-quote-right"></i>          </blockquote><a id="more"></a> ]]></content:encoded>
      
      <comments>https://serendipitious.top/2020/07/02/%E4%BD%A0%E5%A5%BD%E5%93%87/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
